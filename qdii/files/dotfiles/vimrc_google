let mapleader = 'à'

" colore la recherche
set hlsearch

"va directement à la recherche au fur et à mesure de la frappe
set incsearch

" change automatiquement le répertoire de travail
set autochdir
" gère intelligement la casse dans les recherces
set ignorecase
set smartcase

" line number
set nu!

set nocompatible
" vundle-specific
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tpope/vim-surround'
Plugin 'ryanoasis/vim-webdevicons'
Plugin 'majutsushi/tagbar'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'octol/vim-cpp-enhanced-highlight'
Plugin 'tpope/vim-fugitive'
Plugin 'nsf/gocode', {'rtp': 'vim/'}
Plugin 'junegunn/vim-easy-align'
Plugin 'pangloss/vim-javascript'
Plugin 'vim-airline/vim-airline'
Plugin 'airblade/vim-gitgutter'
Plugin 'vim-scripts/EasyMotion'
Plugin 'elzr/vim-json'
Plugin 'Yggdroot/indentline'
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'gregsexton/gitv'
Plugin 'rhysd/clever-f.vim'
Plugin 'edkolev/tmuxline.vim'
Plugin 'mv/mv-vim-puppet'
Plugin 'fatih/vim-go'
Plugin 'vim-scripts/AnsiEsc.vim'
Plugin 'michamos/vim-bepo'
call vundle#end()

" Surround remaps things to "c" we don't want
let g:surround_no_mappings = 1
xmap S <Plug>VSurround
nmap ls <Plug>Csurround
nmap ys <Plug>Ysurround
nmap yS <Plug>YSurround

let g:ctrlp_working_path_mode = 'ra'
let g:clever_f_chars_match_any_signs = ';'
let g:ycm_confirm_extra_conf = 0

" Google-specific
source /usr/share/vim/google/google.vim
filetype plugin indent on
syntax on

Glug syntastic-google checkers=`{'proto': ['glint'], 'python': ['gpylint'], 'go': ['gofmt', 'golint', 'gotype', 'vet'], 'java': ['glint']}`
Glug youcompleteme-google
Glug codefmt gofmt_executable="goimports"
Glug codefmt-google
Glug blaze plugin[mappings]='<leader>b'
Glug outline-window
Glug blazedeps auto_filetypes=`['go']`

" autocmd FileType python AutoFormatBuffer pyformat
autocmd FileType python AutoFormatBuffer gofmt
autocmd FileType bzl AutoFormatBuffer buildifier

" powerline symbols
let g:ctrlp_working_path_mode = 'ra'

" powerline symbols !
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

" NerdTree colors
function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
   exec 'autocmd filetype nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='. a:guifg
   exec 'autocmd filetype nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
endfunction
call NERDTreeHighlightFile('jade', 'green', 'none', 'green', '#151515')
call NERDTreeHighlightFile('ini', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('md', 'blue', 'none', '#3366FF', '#151515')
call NERDTreeHighlightFile('yml', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('config', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('conf', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('json', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('html', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('styl', 'cyan', 'none', 'cyan', '#151515')
call NERDTreeHighlightFile('css', 'cyan', 'none', 'cyan', '#151515')
call NERDTreeHighlightFile('coffee', 'Red', 'none', 'red', '#151515')
call NERDTreeHighlightFile('js', 'Red', 'none', '#ffa500', '#151515')
call NERDTreeHighlightFile('php', 'Magenta', 'none', '#ff00ff', '#151515')
map <F7> :NERDTreeToggle<CR>

" tabgbar
nmap <F8> :TagbarToggle<CR>

" 80-character delimiter
let &colorcolumn=join(range(81,999),",")
highlight ColorColumn ctermbg=235 guibg=#2c2d27
let &colorcolumn="80,".join(range(120,999),",")

" syntastic
let g:syntastic_check_on_open=1
let g:syntastic_enable_signs=1

" clever f
let g:clever_f_not_overwrites_standard_mappings = 1
nmap e <Plug>(clever-f-f)
xmap e <Plug>(clever-f-f)
omap e <Plug>(clever-f-f)
nmap E <Plug>(clever-f-F)
xmap E <Plug>(clever-f-F)
omap E <Plug>(clever-f-F)
nmap è <Plug>(clever-e-t)
xmap è <Plug>(clever-e-t)
omap è <Plug>(clever-e-t)
nmap È <Plug>(clever-e-T)
xmap È <Plug>(clever-e-T)
omap È <Plug>(clever-e-T)

" encoding is utf-8 (needs to be for vim-devicons to work)
set encoding=utf8

" autoclose the preview window when the user accepts the offered completion
let g:ycm_autoclose_preview_window_after_completion=1
nnoremap <leader>g :YcmCompleter GoTo<CR>

" TABS are 4 spaces in .go
au Filetype go setlocal ts=4

" solarized
let g:solarized_termcolors=256
let g:solarized_italic=1
let g:solarized_contrast="high"
set t_Co=256
syntax enable
set background=dark
colorscheme solarized

